{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://git/./src/index.ts"],"sourcesContent":["let GLOBAL = {\r\n    gameLevel: 0,\r\n    timer: 0,\r\n};\r\n\r\nlet playCards = [];\r\nconst suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\nconst cards = ['6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace'];\r\n\r\nconst startButton = document.querySelector('.button');\r\nconst gameLevel = document.querySelectorAll('.level');\r\n\r\ngameLevel.forEach((level) => {\r\n    level.addEventListener('click', function () {\r\n        if (level.classList.contains('selected')) {\r\n            level.classList.remove('selected');\r\n            GLOBAL.gameLevel = 0;\r\n        } else {\r\n            gameLevel.forEach((level2) => {\r\n                level2.classList.remove('selected');\r\n            });\r\n            GLOBAL.gameLevel = Number(level.classList[1]);\r\n            level.classList.add('selected');\r\n            console.log(GLOBAL.gameLevel);\r\n        }\r\n    });\r\n});\r\n\r\nstartButton.addEventListener('click', function () {\r\n    if (GLOBAL.gameLevel !== 0) {\r\n        clearScreen(document.querySelector('.firstScreen'));\r\n        CreateGameScreen();\r\n    } else {\r\n        document.querySelector('.header').classList.add('bounce');\r\n        setTimeout(ChooseYourDestiny, 1000);\r\n    }\r\n\r\n    function ChooseYourDestiny() {\r\n        document.querySelector('.header').classList.remove('bounce');\r\n    }\r\n});\r\n\r\n/** Создание экрана */\r\nfunction CreateGameScreen() {\r\n    renderScreen('section', 'wrap game-screen', document.body, null);\r\n    renderScreen('div', 'game-data', document.querySelector('.wrap'), null);\r\n    renderScreen('div', 'timer', document.querySelector('.game-data'), null);\r\n    renderScreen('div', 'timer-name', document.querySelector('.timer'), null);\r\n    renderScreen('p', '', document.querySelector('.timer-name'), 'min');\r\n    renderScreen('p', '', document.querySelector('.timer-name'), 'sec');\r\n    renderScreen('h2', 'timer-digital timer-start', document.querySelector('.timer'), '0.00');\r\n    renderScreen(\r\n        'button',\r\n        'button reset-btn',\r\n        document.querySelector('.game-data'),\r\n        'Начать заново'\r\n    );\r\n    document.querySelector('.reset-btn').addEventListener('click', function () {\r\n        document.location.reload();\r\n    });\r\n\r\n    renderScreen('div', 'card-field', document.querySelector('.wrap'), null);\r\n\r\n    createCards();\r\n    for (let i = 0; i < GLOBAL.gameLevel; i++) {\r\n        renderScreen('div', `play-card card${i} ${i}`, document.querySelector('.card-field'), null);\r\n        const card = document.querySelector<HTMLElement>(`.card${i}`);\r\n        card.style.backgroundImage = `${playCards[i]}`;\r\n    }\r\n\r\n    /** закрытие карт */\r\n    timer();\r\n    setTimeout(closeCards, 5000);\r\n    setTimeout(OpenCards, 5000);\r\n\r\n    /** Открытие карт */\r\n    function OpenCards() {\r\n        const playCard = document.querySelectorAll('.play-card');\r\n        playCard.forEach((card) => {\r\n            card.addEventListener('click', function () {\r\n                let cardNumber = card.classList[2];\r\n                const card1 = document.querySelector<HTMLElement>(`.card${cardNumber}`);\r\n                card1.style.backgroundImage = `${playCards[cardNumber]}`;\r\n\r\n                document.querySelector(`.card${cardNumber}`).classList.add('active');\r\n                document.querySelector(`.card${cardNumber}`).classList.add('done');\r\n                let active = document.querySelectorAll<HTMLElement>(`.active`);\r\n\r\n                if (GLOBAL.gameLevel <= document.querySelectorAll('.done').length) {\r\n                    clearTimeout(t);\r\n                    document.querySelector(`.blackout`).classList.add('popup');\r\n                    document\r\n                        .querySelector('.play-again-btn')\r\n                        .addEventListener('click', function () {\r\n                            document.location.reload();\r\n                        });\r\n                    document.querySelector(`.header`).textContent = 'Вы выйграли! ';\r\n                    const card3 = document.querySelector<HTMLImageElement>(`.final-img`);\r\n                    card3.src = 'src/img/win.png';\r\n                }\r\n                if (active.length > 1) {\r\n                    if (active[0].style.backgroundImage === active[1].style.backgroundImage) {\r\n                        playCard.forEach(() => {\r\n                            if (document.querySelector(`.active`)) {\r\n                                document.querySelector(`.active`).classList.remove('active');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        clearTimeout(t);\r\n                        document.querySelector(`.blackout`).classList.add('popup');\r\n                        document\r\n                            .querySelector('.play-again-btn')\r\n                            .addEventListener('click', function () {\r\n                                document.location.reload();\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n/** Функции */\r\nfunction clearScreen(screen) {\r\n    while (screen.firstChild) {\r\n        screen.removeChild(screen.firstChild);\r\n    }\r\n}\r\n\r\nfunction renderScreen(attribute, className, node, textContent) {\r\n    const render = document.createElement(attribute);\r\n    render.classList = className;\r\n    render.textContent = textContent;\r\n    node.appendChild(render);\r\n}\r\n\r\nfunction createCards() {\r\n    for (let i = 0; i < GLOBAL.gameLevel / 2; i++) {\r\n        let cardSuits = suits[`${~~(Math.random() * suits.length)}`];\r\n        let cardCards = cards[`${~~(Math.random() * cards.length)}`];\r\n        playCards.push(`url(./src/img/cards/${cardSuits}/${cardCards}.png)`);\r\n        playCards.push(`url(./src/img/cards/${cardSuits}/${cardCards}.png)`);\r\n        playCards.sort(() => Math.random() - 0.6);\r\n    }\r\n}\r\n\r\nfunction closeCards() {\r\n    for (let i = 0; i < GLOBAL.gameLevel; i++) {\r\n        const card5 = document.querySelector<HTMLElement>(`.card${i}`);\r\n        card5.style.backgroundImage = `url(./src/img/card-cover.png)`;\r\n    }\r\n}\r\n\r\n/** timer **/\r\n//@ts-ignore\r\nlet sec = 0;\r\nlet min = 0;\r\nlet t;\r\n\r\n//@ts-ignore\r\nfunction tick() {\r\n    sec++;\r\n    if (sec >= 60) {\r\n        sec = 0;\r\n        min++;\r\n        t;\r\n    }\r\n}\r\nfunction add() {\r\n    let timerStart = document.querySelector('.timer-start');\r\n    let timerFinish = document.querySelector('.timer-finish');\r\n\r\n    tick();\r\n\r\n    GLOBAL.timer = Number((min > 9 ? min : '0' + min) + '.' + (sec > 9 ? sec : '0' + sec));\r\n    timerStart.textContent = String(GLOBAL.timer);\r\n    timerFinish.textContent = String(GLOBAL.timer);\r\n    timer();\r\n}\r\nfunction timer() {\r\n    t = setTimeout(add, 1000);\r\n}\r\n"],"names":["GLOBAL","gameLevel","timer","playCards","suits","cards","startButton","document","querySelector","querySelectorAll","renderScreen","attribute","className","node","textContent","render","createElement","classList","appendChild","closeCards","i","style","backgroundImage","forEach","level","addEventListener","contains","remove","level2","Number","add","console","log","screen","firstChild","removeChild","clearScreen","body","location","reload","cardSuits","Math","random","length","cardCards","push","sort","createCards","setTimeout","playCard","card","cardNumber","active","clearTimeout","t","src","CreateGameScreen","sec","min","timerStart","timerFinish","String"],"sourceRoot":""}