{"version":3,"file":"bundle.js","mappings":"mBAAA,IAAIA,EAAS,CACTC,UAAW,EACXC,MAAO,GAGPC,EAAY,GACVC,EAAQ,CAAC,QAAS,WAAY,SAAU,UACxCC,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,OAAQ,QAAS,OAAQ,OAE5DC,EAAcC,SAASC,cAAc,WAgH3C,SAASC,EAAaC,EAAWC,EAAWC,EAAMC,GAC9C,IAAMC,EAASP,SAASQ,cAAcL,GACtCI,EAAOE,UAAYL,EACnBG,EAAOD,YAAcA,EACrBD,EAAKK,YAAYH,EACrB,CAYA,SAASI,IACL,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAOC,UAAWkB,IAClCZ,SAASC,cACL,eAAQW,IACVC,MAAMC,gBAAkB,+BAElC,CAtIkBd,SAASe,iBAAiB,UAElCC,SAAQ,SAACC,GACfA,EAAMC,iBAAiB,SAAS,WAC5BzB,EAAOC,UAAYyB,OAAOF,EAAMR,UAAU,IAC1CQ,EAAMR,UAAUW,IAAI,YACpBC,QAAQC,IAAI7B,EAAOC,UACvB,GACJ,IAEAK,EAAamB,iBAAiB,SAAS,WACV,IAArBzB,EAAOC,YA8Ff,SAAqB6B,GACjB,KAAOA,EAAOC,YACVD,EAAOE,YAAYF,EAAOC,WAElC,CAjGQE,CAAY1B,SAASC,cAAc,iBAM3C,WACIC,EAAa,UAAW,mBAAoBF,SAAS2B,KAAM,MAC3DzB,EAAa,MAAO,YAAaF,SAASC,cAAc,SAAU,MAClEC,EAAa,MAAO,QAASF,SAASC,cAAc,cAAe,MACnEC,EAAa,MAAO,aAAcF,SAASC,cAAc,UAAW,MACpEC,EAAa,IAAK,GAAIF,SAASC,cAAc,eAAgB,OAC7DC,EAAa,IAAK,GAAIF,SAASC,cAAc,eAAgB,OAC7DC,EACI,KACA,4BACAF,SAASC,cAAc,UACvB,SAEJC,EACI,SACA,mBACAF,SAASC,cAAc,cACvB,iBAEJD,SAASC,cAAc,cAAciB,iBAAiB,SAAS,WAC3DlB,SAAS4B,SAASC,QACtB,IAEA3B,EAAa,MAAO,aAAcF,SAASC,cAAc,SAAU,MA6EvE,WACI,IAAK,IAAIW,EAAI,EAAGA,EAAInB,EAAOC,UAAY,EAAGkB,IAAK,CAC3C,IAAIkB,EAAYjC,EAAM,aAAMkC,KAAKC,SAAWnC,EAAMoC,UAC9CC,EAAYpC,EAAM,aAAMiC,KAAKC,SAAWlC,EAAMmC,UAClDrC,EAAUuC,KAAK,8BAAuBL,EAAS,YAAII,EAAS,UAC5DtC,EAAUuC,KAAK,8BAAuBL,EAAS,YAAII,EAAS,UAC5DtC,EAAUwC,MAAK,WAAM,OAAAL,KAAKC,SAAW,EAAhB,G,CAE7B,CAnFIK,GACA,IAAK,IAAIzB,EAAI,EAAGA,EAAInB,EAAOC,UAAWkB,IAClCV,EACI,MACA,wBAAiBU,EAAC,YAAIA,GACtBZ,SAASC,cAAc,eAAgB,MAE3CD,SAASC,cAA2B,eAAQW,IAAKC,MAAMC,gBAAkB,UAAGlB,EAAUgB,IAI1FjB,IACA2C,WAAW3B,EAAY,KAGvB,IAAM4B,EAAWvC,SAASe,iBAAiB,cAC3CwB,EAASvB,SAAQ,SAACwB,GACdA,EAAKtB,iBAAiB,SAAS,WAC3B,IAAIuB,EAAaD,EAAK/B,UAAU,GAChCT,SAASC,cAA2B,eAAQwC,IAAc5B,MAAMC,gBAAkB,UAAGlB,EAAU6C,IAC/FzC,SACKC,cAAc,eAAQwC,IACtBhC,UAAUW,IAAI,UACnBpB,SAASC,cAAc,eAAQwC,IAAchC,UAAUW,IAAI,QAC3D,IAAIsB,EAAS1C,SAASe,iBAA8B,WAEhDtB,EAAOC,WAAaM,SAASe,iBAAiB,SAASkB,SACvDU,aAAaC,GACb5C,SAASC,cAAc,aAAaQ,UAAUW,IAAI,SAClDpB,SACKC,cAAc,mBACdiB,iBAAiB,SAAS,WACvBlB,SAAS4B,SAASC,QACtB,IACJ7B,SAASC,cAAc,WAAWK,YAAc,gBAChDN,SAASC,cAAgC,cAAc4C,IAAM,mBAE7DH,EAAOT,OAAS,IAEZS,EAAO,GAAG7B,MAAMC,kBAChB4B,EAAO,GAAG7B,MAAMC,gBAEhByB,EAASvB,SAAQ,WACbhB,SACKC,cAAc,WACdQ,UAAUqC,OAAO,SAC1B,KAEAH,aAAaC,GACb5C,SAASC,cAAc,aAAaQ,UAAUW,IAAI,SAClDpB,SACKC,cAAc,mBACdiB,iBAAiB,SAAS,WACvBlB,SAAS4B,SAASC,QACtB,KAGhB,GACJ,GACJ,CAzFQkB,GAER,IA2HA,IAEIH,EAFAI,EAAM,EACNC,EAAM,EAWV,SAAS7B,IACL,IAAI8B,EAAalD,SAASC,cAAc,gBACpCkD,EAAcnD,SAASC,cAAc,mBATzC+C,GACW,KACPA,EAAM,EACNC,KAUJxD,EAAOE,MAAQwB,QAAQ8B,EAAM,EAAIA,EAAM,IAAMA,GAAO,KAAOD,EAAM,EAAIA,EAAM,IAAMA,IACjFE,EAAW5C,YAAc8C,OAAO3D,EAAOE,OACvCwD,EAAY7C,YAAc8C,OAAO3D,EAAOE,OACxCA,GACJ,CACA,SAASA,IACLiD,EAAIN,WAAWlB,EAAK,IACxB,C","sources":["webpack://git/./src/index.ts"],"sourcesContent":["let GLOBAL = {\r\n    gameLevel: 0,\r\n    timer: 0,\r\n};\r\n\r\nlet playCards = [];\r\nconst suits = ['clubs', 'diamonds', 'hearts', 'spades'];\r\nconst cards = ['6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace'];\r\n\r\nconst startButton = document.querySelector('.button');\r\nconst gameLevel = document.querySelectorAll('.level');\r\n\r\ngameLevel.forEach((level) => {\r\n    level.addEventListener('click', function () {\r\n        GLOBAL.gameLevel = Number(level.classList[1]);\r\n        level.classList.add('selected');\r\n        console.log(GLOBAL.gameLevel);\r\n    });\r\n});\r\n\r\nstartButton!.addEventListener('click', function () {\r\n    if (GLOBAL.gameLevel !== 0) {\r\n        clearScreen(document.querySelector('.firstScreen'));\r\n        CreateGameScreen();\r\n    } \r\n});\r\n\r\n/** Создание экрана */\r\nfunction CreateGameScreen() {\r\n    renderScreen('section', 'wrap game-screen', document.body, null);\r\n    renderScreen('div', 'game-data', document.querySelector('.wrap'), null);\r\n    renderScreen('div', 'timer', document.querySelector('.game-data'), null);\r\n    renderScreen('div', 'timer-name', document.querySelector('.timer'), null);\r\n    renderScreen('p', '', document.querySelector('.timer-name'), 'min');\r\n    renderScreen('p', '', document.querySelector('.timer-name'), 'sec');\r\n    renderScreen(\r\n        'h2',\r\n        'timer-digital timer-start',\r\n        document.querySelector('.timer'),\r\n        '00.00'\r\n    );\r\n    renderScreen(\r\n        'button',\r\n        'button reset-btn',\r\n        document.querySelector('.game-data'),\r\n        'Начать заново'\r\n    );\r\n    document.querySelector('.reset-btn').addEventListener('click', function () {\r\n        document.location.reload();\r\n    });\r\n\r\n    renderScreen('div', 'card-field', document.querySelector('.wrap'), null);\r\n\r\n    createCards();\r\n    for (let i = 0; i < GLOBAL.gameLevel; i++) {\r\n        renderScreen(\r\n            'div',\r\n            `play-card card${i} ${i}`,\r\n            document.querySelector('.card-field'), null\r\n        );\r\n        document.querySelector<HTMLElement>(`.card${i}`).style.backgroundImage = `${playCards[i]}`;\r\n    }\r\n\r\n    /** закрытие карт */\r\n    timer();\r\n    setTimeout(closeCards, 5000);\r\n\r\n    /** Открытие карт */\r\n    const playCard = document.querySelectorAll('.play-card');\r\n    playCard.forEach((card) => {\r\n        card.addEventListener('click', function () {\r\n            let cardNumber = card.classList[2];\r\n            document.querySelector<HTMLElement>(`.card${cardNumber}`).style.backgroundImage = `${playCards[cardNumber]}`;\r\n            document\r\n                .querySelector(`.card${cardNumber}`)\r\n                .classList.add('active');\r\n            document.querySelector(`.card${cardNumber}`).classList.add('done');\r\n            let active = document.querySelectorAll<HTMLElement>(`.active`);\r\n\r\n            if (GLOBAL.gameLevel <= document.querySelectorAll('.done').length) {\r\n                clearTimeout(t);\r\n                document.querySelector(`.blackout`).classList.add('popup');\r\n                document\r\n                    .querySelector('.play-again-btn')\r\n                    .addEventListener('click', function () {\r\n                        document.location.reload();\r\n                    });\r\n                document.querySelector(`.header`).textContent = 'Вы выйграли! ';\r\n                document.querySelector<HTMLImageElement>(`.final-img`).src = 'src/img/win.png';\r\n            }\r\n            if (active.length > 1) {\r\n                if (\r\n                    active[0].style.backgroundImage ===\r\n                    active[1].style.backgroundImage\r\n                ) {\r\n                    playCard.forEach(() => {\r\n                        document\r\n                            .querySelector(`.active`)\r\n                            .classList.remove('active');\r\n                    });\r\n                } else {\r\n                    clearTimeout(t);\r\n                    document.querySelector(`.blackout`).classList.add('popup');\r\n                    document\r\n                        .querySelector('.play-again-btn')\r\n                        .addEventListener('click', function () {\r\n                            document.location.reload();\r\n                        });\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/** Функции */\r\nfunction clearScreen(screen) {\r\n    while (screen.firstChild) {\r\n        screen.removeChild(screen.firstChild);\r\n    }\r\n}\r\n\r\nfunction renderScreen(attribute, className, node, textContent) {\r\n    const render = document.createElement(attribute);\r\n    render.classList = className;\r\n    render.textContent = textContent;\r\n    node.appendChild(render);\r\n}\r\n\r\nfunction createCards() {\r\n    for (let i = 0; i < GLOBAL.gameLevel / 2; i++) {\r\n        let cardSuits = suits[`${~~(Math.random() * suits.length)}`];\r\n        let cardCards = cards[`${~~(Math.random() * cards.length)}`];\r\n        playCards.push(`url(./src/img/cards/${cardSuits}/${cardCards}.png)`);\r\n        playCards.push(`url(./src/img/cards/${cardSuits}/${cardCards}.png)`);\r\n        playCards.sort(() => Math.random() - 0.6);\r\n    }\r\n}\r\n\r\nfunction closeCards() {\r\n    for (let i = 0; i < GLOBAL.gameLevel; i++) {\r\n        document.querySelector<HTMLElement>(\r\n            `.card${i}`\r\n        ).style.backgroundImage = `url(./src/img/card-cover.png)`;\r\n    }\r\n}\r\n\r\n/** timer **/\r\n\r\nlet sec = 0;\r\nlet min = 0;\r\nlet t;\r\n\r\nfunction tick() {\r\n    sec++;\r\n    if (sec >= 60) {\r\n        sec = 0;\r\n        min++;\r\n        t;\r\n    }\r\n}\r\nfunction add() {\r\n    let timerStart = document.querySelector('.timer-start');\r\n    let timerFinish = document.querySelector('.timer-finish');\r\n\r\n    tick();\r\n\r\n    GLOBAL.timer = Number((min > 9 ? min : '0' + min) + '.' + (sec > 9 ? sec : '0' + sec));\r\n    timerStart.textContent = String(GLOBAL.timer);\r\n    timerFinish.textContent = String(GLOBAL.timer);\r\n    timer();\r\n}\r\nfunction timer() {\r\n    t = setTimeout(add, 1000);\r\n}\r\n"],"names":["GLOBAL","gameLevel","timer","playCards","suits","cards","startButton","document","querySelector","renderScreen","attribute","className","node","textContent","render","createElement","classList","appendChild","closeCards","i","style","backgroundImage","querySelectorAll","forEach","level","addEventListener","Number","add","console","log","screen","firstChild","removeChild","clearScreen","body","location","reload","cardSuits","Math","random","length","cardCards","push","sort","createCards","setTimeout","playCard","card","cardNumber","active","clearTimeout","t","src","remove","CreateGameScreen","sec","min","timerStart","timerFinish","String"],"sourceRoot":""}